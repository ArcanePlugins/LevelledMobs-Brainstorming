##########################################
#           ~ LevelledMobs v4 ~          #
# The Ultimate RPG Mob Levelling Plugin  #
##########################################

# These comments will be beautified later on :)

# LM 4 is based upon a Functions System
#
# Functions are used to configure the plugin up to an extreme degree. So much is
# possible!
#
# Users can create as many functions as they want, they act like methods/functions in
# programming languages.
#
# Functions have Processes in them, which contain the actual logic of the function.
# Processes have a list of Conditions and Actions. All (or a specific % of) conditions
# must be satisfied in a given Process in order for it to execute all of the Actions.
# Actions can be things like 'Level this mob' or 'Send a chat message'. Conditions can be
# things like 'Is this mob already levelled' or 'What world is this mob in'. There are also
# actions which can modify the processing in a function, e.g. 'exit-function' is an action
# which stops a given function from doing any more processing.
# 
# Functions are processed from top to bottom, same with processes, actions, and conditions.
#
# Functions can also call other functions by using an action. LevelledMobs will detect if a
# function seems to have a circular dependency (e.g. function1 runs function2 which then
# runs function1 again), it will simply run the 'exit-function' action automatically and
# yell at the console. An advanced setting can disable the circular dependency detection.
functions:
  'main':
    # Descriptions can be optionally provided as a visual aid.
    # Descriptions are stored internally in the code so that addon plugins e.g. GUIs are able
    # to use the description value if they wish.
    description: 'This function automatically levels mobs, if they fit certain requirements.'
    
    # A list of events which will trigger this function automatically.
    # 'on-mob-spawn' = EntitySpawnEvent
    # 'on-mob-scan' = when LM automatically scans an entity async, some random LivingEntity.
    triggers: ['on-mob-spawn', 'on-mob-scan']

    # Processes can be clumped together into Clusters. This allows a group of processes to be
    # easily enabled/disabled. There is also an action to exit the current cluster. Clusters
    # can be nested, though users should avoid this because it might look messy.
    processes:
      - process: 'check-not-levellable'
        description: 'Establishes conditions required for individual mobs to become levelled.'
        if:
          - check: 'levelled-state'
            description: 'This check makes sure that the mob being checked is not already levelled.'
            required-state: 'NOT_LEVELLED'
          - check: 'world-name'
            description: 'A list of world names which mobs cannot be levelled in.'
            case-sensitivity: true
            in-list: []
          - check: 'entity-type'
            description: >
              A list of mob entity types which are not allowed to become levelled.
              Note: you may want to consider nerfing the attribute multipliers on
              the mob instead of making it not levelled.
            in-list: []
          - check: 'mob-owner'
            description: 'A list of MobOwner plugin integration names which are allowed to become levelled.'
            not-in-list: []
        do:
          - action: 'set-level'
            description: 'This tells LevelledMobs to not level the mob.'
            formula: 'no-level'
          - action: 'exit-function'
            description: 'This tells LevelledMobs to not continue running this function for the mob.'
      - process: 'apply-level'
        do:
          - action: 'set-packet-nametag'
            formula: '[Lvl %mob-lvl% | %prefix%%mob-name%%suffix% | %mob-health%/%mob-max-health%hp]'
            visibility-methods: ['TARGETED', 'ATTACKED']
            visibility-duration: 5
          - action: 'set-level-inheritance'
            description: 'Allow child and passenger mobs to inherit the level and stats of the mob.'
            babies-inherit-level: true
            passengers-inherit-level: true
        use-presets: ['standard-difficulty']

  'nametag-updater':
    description: 'This function automatically updates the nametags of levelled mobs.'
    triggers: ['on-mob-damage', 'on-mob-regain-health', 'on-player-join', 'on-player-teleport', 'on-mob-track']
    processes:
      - process: 'update-nametag-for-mob'
        description: 'Update the nametag of the mob'
        if:
          - check: 'levelled-state'
            description: 'Check if the mob is not levelled'
            required-state: 'LEVELLED'
        do:
          - action: 'update-nametag'

  'example-function':
    description: 'This function is just an example which is not used by default.'
    triggers: []
    processes:
      - process: 'broadcast-a-message'
        description: 'Broadcasts a cool message to everyone on the server'
        do:
          - action: 'broadcast-message-to-server'
            message:
              - '%prefix% Hello, world!'
              - '%prefix% ...another line!'

# Should LevelledMobs asynchronously scan for pre-existing mobs to level?
#
##### Move to wiki:
##### If LevelledMobs was installed since you last reset your world, you can
##### disable this. This is enabled by default as most server owners likely
##### install LevelledMobs on servers with existing worlds.
scan-for-existing-mobs: true

##### NOTE TO REVIEWERS: Check out the `demo/advanced_settings.yml` file
##### to see all of the hidden Advanced Settings that can be present in
##### this file upon manual inclusion from the user.

#### File Metadata
# Do not edit this section!
metadata:
  version:
    original: 999
    current: 999
